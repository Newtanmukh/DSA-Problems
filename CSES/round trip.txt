#include<bits/stdc++.h>  
using namespace std;
//logic is that,first do the coloring,then check for abuigity,that is declare another function called checkdfs which will check if any of the parent-child has got the same color or not.

bool visited[200001];
vector<int> city[200001];

int parent[200001];
bool checkvisited[200001];




void dfs(int x,int y)
{visited[x]=true;
int i;
int j;
int p;

parent[x]=y;

for(i=0;i<city[x].size();i++)
{
  if(!visited[city[x][i]])
  {
    dfs(i);

  }
  else if(parent[city[x][i]])
}
}


int main(){
int n,m;
cin>>n>>m;




int x,y;
while(m--)
{cin>>x>>y;

city[x].push_back(y);
city[y].push_back(x);
}



int i;
for(i=1;i<n+1;i++)
{
  if(!visited[i])
  {parent[i]=-1;
    dfs(i,-1);
 
   }
}

for(i=1;i<n+1;i++)
{
 


}



for(i=1;i<n+1;i++)
cout<<teamnumber[i]+1<<" ";
cout<<endl;

  
}