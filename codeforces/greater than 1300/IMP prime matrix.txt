//l earn sieve of erathosis first   


 #include <iostream>
    #include <cstring>
    #include <vector>
    #include <cmath>
    using namespace std;
     
    bool p[100005];
    int d[100005];
    int st[1000];
     
    void resh(int n){
        p[0] = p[1] = true;                 //true means it is not prime.
        for (int i = 2; i <= n; ++i)
            if (!p[i])
                if (i * 1ll * i <= n)
                    for (int j = i*i; j <= n; j += i)
                        p[j] = true;
        int y = -1;
        for(int i = 100003; i > -1; --i){
            if(!p[i]) y = i;
            d[i] = y;
        }
    }
     
    int main(){
        int n, s, m, x, ms = 1000000000;
        resh(100003);
        cin >> n >> m;
        for(int i = 0; i < n; ++i){
            s = 0;
            for(int j = 0; j < m; ++j){
                if(i == 0) st[j] = 0;
                cin >> x;
                if(p[x]){
                    s += d[x] - x;
                    st[j] += d[x] - x;
                }
            }
            ms = min(s, ms);
        }
        
        for(int i = 0; i < m; ++i){
            ms = min(ms, st[i]);
        }
        cout << ms;
        return 0;
    }