



//take 3 points on -ve x axis and 5 point on +ve one. so now maximum will be achieveed when he starts towards right.























-----------------------------------------------------------------------











    #include <vector>
    #include <list>
    #include <map>
    #include <math.h>
    #include <cmath>
    #include <set>
    #include <queue>
    #include <deque>
    #include <string>
    #include <stack>
    #include <bitset>
    #include <algorithm>
    #include <functional>
    #include <numeric>
    #include <utility>
    #include <string.h>
    #include <sstream>
    #include <iostream>
    #include <iomanip>
    #include <cstdio>
    #include <cstdlib>
    #include <ctime>
    using namespace std;
     
    int main()
    {
        int n;
        vector<pair<int,int> >v,v1;
        cin>>n;
        for(int f=0;f<n;f++)
        {
            int x,y;
            cin>>x>>y;
            if(x>0)
                v.push_back(make_pair(x,y));
            else
                v1.push_back(make_pair(-x,y));
        }
        sort(v.begin(),v.end());
        sort(v1.begin(),v1.end());
        long long ans=0;
        for(int f=0;f<v.size()&&f<v1.size();f++)
            ans+=v[f].second+v1[f].second;
        if(v.size()>v1.size())
            ans+=v[v1.size()].second;
        if(v.size()<v1.size())
            ans+=v1[v.size()].second;
        cout<<ans<<endl;
    }






















---------------------------------------------------------------------------------------------------
    #include <bits/stdc++.h>
    #define mp make_pair
    #define endl '\n'
    typedef long long ll;
    using namespace std;
    int n;
    vector<pair<int, int> > a, b;
    int main() {
    #ifndef ONLINE_JUDGE
    	freopen("myfile.in", "r", stdin);
    #endif
    	scanf("%d", &n);
    	for (int x, y, i = 0; i < n; ++i) {
    		scanf("%d%d", &x, &y);
    		if (x < 0)
    			a.push_back(mp(-1 * x, y));
    		else
    			b.push_back(mp(x, y));
    	}
    	sort(a.begin(), a.end());
    	sort(b.begin(), b.end());
    	int x = a.size(), y = b.size();
     
    	int ans = 0, mn = min(x, y);
    	for (int i = 0; i < mn; ++i) {
    		ans += a[i].second + b[i].second;
    	}
    	if (a.size() > b.size())
    		ans += a[mn].second;
    	else if (b.size() > a.size())
    		ans += b[mn].second;
    	cout << ans << endl;
     
    	return 0;
    }