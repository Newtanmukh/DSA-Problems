#include<stdio.h>
#include<stdlib.h>
#include<memory.h>
 
int du[110],g[110][110],v[110];
int main()
{
    int n,m,i,j,cnt,ans,x,y;
    scanf("%d%d",&n,&m);
 
    memset(du,0,sizeof(du));
 
    memset(g,0,sizeof(g));
    for(i=1;i<=m;i++)
    {
        scanf("%d%d",&x,&y);
        du[x]++;
        du[y]++;
        g[x][y]=g[y][x]=1;
    }
     
    ans=0;
    while(1)
    {
        cnt=0;
        memset(v,0,sizeof(v));
 
        for(i=1;i<=n;i++)
        {
            if(du[i]==1) 
            {
                du[i]=-1;
                cnt++;
                v[i]=1;
            }
        }
 
        //printf("cnt=%d\n",cnt);
        if(cnt==0) break;        //means that now no such exists such that it has adjaency 1. either all students have been kicked out or cycles are left now.
 
        ans++;
 
        for(i=1;i<=n;i++)
        {
            if(v[i]) 
            {
                for(j=1;j<=n;j++)
                    if(g[i][j]) du[j]--;
            }
        }
 
        //for(i=1;i<=n;i++) printf("%d ",du[i]);
    }
 
    printf("%d\n",ans);
    //system("pause");
    return 0;
 
}

--------------------------------------------------------------------------------------------------------





    #include <cstdio>
    #include <iostream>
    #include <cstring>
    #define maxn 110
    using namespace std;
     
    int N,M;
    int ar[maxn][maxn];
    int res,deg[maxn];
    int used[maxn];
     
    int main(){
    	scanf("%d%d",&N,&M);
    	
    	for(int i=1,a,b;i<=M;i++){
    		scanf("%d%d",&a,&b);
    		ar[a][b]=ar[b][a]=1;
    		deg[a]++;
    		deg[b]++;
    	}
    	
    	int flag=1;
    	
    	while(flag){
    		flag=0;
    		
    		memset(used,0,sizeof(used));
    		
    		for(int i=1;i<=N;i++)
    			if(deg[i]==1){
    				used[i]=1;
    				flag=1;
    			}
    		
    		for(int i=1;i<=N;i++)
    			if(used[i])
    				for(int j=1;j<=N;j++)
    					if(ar[i][j]){
    						ar[i][j]=ar[j][i]=0;
    						deg[j]--;
    						deg[i]--;     //in this code if deg[i] was 1 it will become very negative now.
    					}
    		
    		res+=flag;
    	}
    	
    	printf("%d\n",res);
    	return 0;
    }
 