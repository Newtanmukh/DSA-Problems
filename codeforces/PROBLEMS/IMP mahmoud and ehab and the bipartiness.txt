    #include <iostream>
    #include <vector>
    #include <set>
    using namespace std;
     
    vector<int> se[2];
    vector<int> v[100010];
    vector<int> trav(100010,0);
    vector<int> in(100010,0);
     

// its given that its a tree. so it means if u start from 1 u will reach to end anyways
     
    void dfs(int i,int s){
    	if(trav[i])return ;
    	trav[i]=1;
    	se[s].push_back(i);
    	for(auto x:v[i]){
    		dfs(x,1-s);
    	}
    }
     
     
    int main(){
    	int n;cin>>n;
    	for(int i=0;i<n-1;i++){
    		int x,y;cin>>x>>y;
    		v[x].push_back(y);
    		v[y].push_back(x);
    		in[x]++;
    		in[y]++;
    	}
    	dfs(1,1);
     
    	long long ans=0,l=se[1].size();
    	for(auto x:se[0]){
    		ans+=l-in[x];
    	}
    	cout<<ans;
    	return 0;
    }